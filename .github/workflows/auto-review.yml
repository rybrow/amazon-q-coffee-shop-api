name: AI Review of Merge Request

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  actions: write

jobs:
  AmazonQCodeReview:
    runs-on: ubuntu-latest
    env:
      prompt: |
        As a Backend Java Developer, Develop a feature that fits the requirements in issue_content.txt
        You have the openjdk 17 and maven available to you If needed, generate a new project with the appropriate name, and archetype and install the relevant dependencies.
        Generate the relevant devfile to run the project.

        When you are done:
        Put an appropriate commit message in the "commit_message.txt"
        Put your pull request notes in "pull_request.txt"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::861276113617:role/RybrowGithubActionsRole
          aws-region: ap-southeast-2
      - name: Get Updated Files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr view ${{ github.event.pull_request.number }} --json files -q '.files[].path' >> changes.txt
          cat changes.txt
      - name: Review Feature
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://desktop-release.q.us-east-1.amazonaws.com/latest/amazon-q.deb -o amazon-q.deb
          sudo apt install -y ./amazon-q.deb
          rm amazon-q.deb
          mkdir -P ~/.local/share/amazon-q || echo "Q Directory exists"
          aws s3 sync s3://rybrow-amazon-q-cache/rybrow ~/.local/share/amazon-q
          echo "/help" | q chat

      # - name: Commit and push changes
      #   run: |
      #     commit_message=$(cat commit_message.txt)
      #     git config --global user.email "amazon-q-bot@users.noreply.github.com"
      #     git config --global user.name "Amazon Q Bot"
      #     git add .
      #     git commit -m "#${{ github.event.issue.number }}: ${commit_message}"
      #     git push origin "issue-${{ github.event.issue.number }}"

      # - name: Create Pull Request if not exists
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     PR_EXISTS=$(gh pr list --head issue-${{ github.event.issue.number }} --json number -q '.[].number')
      #     if [ -z "$PR_EXISTS" ]; then
      #       PR_BODY=$(cat pull_request.txt)
      #       gh pr create --title "Resolve issue #${{ github.event.issue.number }}" \
      #         --body "$PR_BODY" \
      #         --head "issue-${{ github.event.issue.number }}"
      #     fi

      # - name: Mark as ready for review
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh issue edit ${{ github.event.issue.number }} --remove-label "in-progress"
      #     gh issue edit ${{ github.event.issue.number }} --add-label "ready-for-review" || "Already in progress"
