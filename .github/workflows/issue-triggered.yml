name: AI Development Of Feature

on:
  issues:
    types: [labeled]

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  GetECRLogin:
    if: github.event.label.name == 'ready-for-ai-development' || github.event.label.name == 'ready-for-ai-angular-development' || github.event.label.name == 'ready-for-ai-java-development'
    runs-on: ubuntu-latest
    outputs:
      ecr-password: ${{ steps.get-ecr-password.outputs.password }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::861276113617:role/RybrowGithubActionsRole
          aws-region: ap-southeast-2

      - name: Get ECR password
        id: get-ecr-password
        run: |
          echo "password=$(aws ecr get-login-password --region ap-southeast-2)" >> $GITHUB_OUTPUT

  Java_FeatureDevelopment:
    needs: GetECRLogin
    runs-on: ubuntu-latest
    container:
      credentials:
        username: AWS
        password: ${{ needs.GetECRLogin.outputs.ecr-password }}
      image: 861276113617.dkr.ecr.ap-southeast-2.amazonaws.com/rybrow/q-developer-agent:builder-openjdk17-maven
    env:
      prompt: |
        As a Backend Java Developer, Develop a feature that fits the requirements in issue_content.txt
        You have the openjdk 17 and maven available to you If needed, generate a new project with the appropriate name, and archetype and install the relevant dependencies.
        Generate the relevant devfile to run the project.

        When you are done:
        Put an appropriate commit message in the "commit_message.txt"
        Put your pull request notes in "pull_request.txt"
    if: github.event.label.name == 'ready-for-ai-java-development'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create/checkout issue branch
        run: |
          git fetch --all
          BRANCH_NAME="issue-${{ github.event.issue.number }}"
          if git ls-remote --heads origin $BRANCH_NAME | grep -q $BRANCH_NAME; then
            git checkout $BRANCH_NAME
          else
            git checkout -b $BRANCH_NAME
          fi
      - name: Store issue content
        run: |
          echo "Issue title: ${{ github.event.issue.title }}" >> issue_content.txt
          echo "Issue number: ${{ github.event.issue.number }}" >> issue_content.txt
          echo "${{ github.event.issue.body }}" >> issue_content.txt
          cat issue_content.txt
      - name: Remove development label and put issue in progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue edit ${{ github.event.issue.number }} --remove-label "ready-for-ai-java-development"
          gh issue edit ${{ github.event.issue.number }} --remove-label "ready-for-review" || "No Review Label"
          gh issue edit ${{ github.event.issue.number }} --add-label "in-progress" || "Already in progress"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::861276113617:role/RybrowGithubActionsRole
          aws-region: ap-southeast-2
      - name: Develop Feature
        uses: ./.github/actions/q-dev
        with:
          prompt: ${{ env.prompt }}

      - name: Commit and push changes
        run: |
          commit_message=$(cat commit_message.txt)
          git config --global user.email "amazon-q-bot@users.noreply.github.com"
          git config --global user.name "Amazon Q Bot"
          git add .
          git commit -m "#${{ github.event.issue.number }}: ${commit_message}"
          git push origin "issue-${{ github.event.issue.number }}"

      - name: Create Pull Request if not exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_EXISTS=$(gh pr list --head issue-${{ github.event.issue.number }} --json number -q '.[].number')
          if [ -z "$PR_EXISTS" ]; then
            PR_BODY=$(cat pull_request.txt)
            gh pr create --title "Resolve issue #${{ github.event.issue.number }}" \
              --body "$PR_BODY" \
              --head "issue-${{ github.event.issue.number }}"
          fi

      - name: Mark as ready for review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue edit ${{ github.event.issue.number }} --remove-label "in-progress"
          gh issue edit ${{ github.event.issue.number }} --add-label "ready-for-review" || "Already in progress"
